{% extends layout ?: "@CoreShopPayumBundle::layout.html.twig" %}

{% block content %}
    {{ parent() }}

    <form method="post" class="formular" id="paymentFrameForm">
        <iframe id="paymentIframe" src="{{ frame_src }}" style="border:none; height:200px;"></iframe>
        <div class="container">
            <div class="row bg-classes-transparent">
                <div class="12 col-sm-6 text-center text-sm-left">
                    <button class="btn btn-success" type="submit">{{ 'coreshop.ui.buy'|trans }}</button>
                </div>
                <div class="12 col-sm-6 text-center text-sm-right">
                    <a class="btn btn-secondary" href="{{ coreshop_path(order, 'coreshop_order_revise', {'token': order.token}) }}">{{ 'coreshop.ui.back'|trans }}</a>
                </div>
            </div>
        </div>
    </form>
{% endblock %}

{% block javascripts %}
    {{ parent() }}

    <script type="text/javascript">
        /**
         * Credit card javascript for payment frame
         *
         * This is a coding example for credit and debit card integration
         * using Heidelpay Payment Frame
         *
         *
         * @license Use of this software requires acceptance of the Evaluation License Agreement. See LICENSE file.
         * @copyright Copyright Â© 2016-present Heidelberger Payment GmbH. All rights reserved.
         * @link  http://dev.heidelpay.com/heidelpay-php-api/
         * @autor  Jens Richter
         * @category example
         */

        var paymentFrameIframe = document.getElementById('paymentIframe');


        /**
         * Get hostname and protocol from paymentIframe
         */
        targetOrigin = getDomainFromUrl(paymentFrameIframe.src);

        /**
         * Get the form element
         */

        paymentFrameForm = document.getElementById('paymentFrameForm');


        /**
         * Add an event listener to from submit, which will execute the sendMessage function
         */
        if (paymentFrameForm.addEventListener) {// W3C DOM
            paymentFrameForm.addEventListener('submit', sendMessage);
        }
        else if (paymentFrameForm.attachEvent) { // IE DOM
            paymentFrameForm.attachEvent('onsubmit', sendMessage);
        }

        /**
         * Define send Message function
         * This function will collect each inpunt inside the form and then submit
         * the iframe to the payment server. Please note that it is not allowed to submit
         * credit or debit card information form your webpage.
         */

        function sendMessage(e) {

            if (e.preventDefault) {
                e.preventDefault();
            }
            else {
                e.returnValue = false;
            }

            let data = {};

            /**
             * Collection form input fields
             */
            for (let i = 0, len = paymentFrameForm.length; i < len; ++i) {
                let input = paymentFrameForm[i];
                if (input.name) {
                    data[input.name] = input.value;
                }

            }

            /**
             * Send html postmessage to payment frame
             */
            paymentFrameIframe.contentWindow.postMessage(JSON.stringify(data), targetOrigin);
        }

        /**
         * Function to get the domain from a given url
         */
        function getDomainFromUrl(url) {
            let arr = url.split("/");
            return arr[0] + "//" + arr[2];
        }


        /**
         * Add an listener to your webpage, which will recieve the response message
         * from payment server.
         */
        if (window.addEventListener) { // W3C DOM
            window.addEventListener('message', receiveMessage);

        }
        else if (window.attachEvent) { // IE DOM
            window.attachEvent('onmessage', receiveMessage);
        }

        /**
         * Define receiveMessage function
         *
         * This function will recieve the response message form the payment server.
         */
        function receiveMessage(e) {

            if (e.origin !== targetOrigin) {
                return;
            }

            let antwort = JSON.parse(e.data);
            console.log(antwort);
        }

    </script>

{% endblock %}
